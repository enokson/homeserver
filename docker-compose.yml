version: "3"

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:

  web:
    image: nginx
    container_name: nginx-proxy
    volumes:
      - "./apps/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./apps/nginx/certs/:/etc/nginx/certs"
    ports:
      - "80:80" # redirect to https proxy
      - "8080:8080" # non https server proxy
      - "443:443" # https proxy
      - "8081:8081" # plex http port
      - "4433:4433" # plex https port
      - "8082:8082" # nextcloud http port
      - "4434:4434" # nextcloud https port
    extra_hosts:
      - "localnode:${NGINX_LOCAL_NODE_ID}"
    depends_on:
      - pihole
      - homer
      - plex
    # command: [nginx-debug, '-g', 'daemon off;']
    networks:
      - proxy

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      # - "8080:80/tcp"
    environment:
      TZ: 'America/Chicago'
      WEBPASSWORD: '${PIHOLE_WEBPASSWORD}'
    # Volumes store your data between container upgrades
    volumes:
      - '${PIHOLE_VOL_DNSMASQ_LOCATION}:/etc/pihole/'
      - '${PIHOLE_VOL_APP_LOCATION}:/etc/dnsmasq.d/'
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    networks:
      - proxy

  homer:
    container_name: homer
    image: b4bz/homer
    volumes:
      - "./apps/homer/logos:/www/assets/logos/"
      - "./apps/homer/config.yml:/www/assets/config.yml:ro"
      # - "${HOMER_ASSETS_LOCATION}:/www/assets"
    networks:
      - proxy

  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    ports:
      - "1900:1900/udp"
      - "5353:5353/udp"
      - "8324:8324/tcp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "32469:32469/tcp"
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ${PLEX_CONFIG_LOCATION}:/config
      - ${PLEX_LIBRARY_LOCATION}/tv/:/tv
      - ${PLEX_LIBRARY_LOCATION}/movies:/movies
    restart: unless-stopped
    networks:
      - proxy

  nextcloud_db:
    image: postgres
    container_name: nextcloud_db
    restart: always
    volumes:
      - ${NEXTCLOUD_DB_DATA_LOCATION}:/var/lib/postgresql/data
    environment: 
      - POSTGRES_DB=${NEXTCLOUD_DB_NAME}
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
    networks:
      - nextcloud

  nextcloud_redis:
    image: redis
    container_name: nextcloud_redis
    restart: always
    networks:
      - nextcloud

  nextcloud_app:
    image: nextcloud:fpm
    container_name: nextcloud
    restart: always
    volumes:
      - ${NEXTCLOUD_DATA_LOCATION}:/var/www/html
    environment:
      - POSTGRES_HOST=${NEXTCLOUD_DB_HOST}
      - POSTGRES_DB=${NEXTCLOUD_DB_NAME}
      - POSTGRES_USER=${NEXTCLOUD_DB_USER}
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - REDIS_HOST=${NEXTCLOUD_REDIS_HOST}
    depends_on:
      - nextcloud_db
      - nextcloud_redis
    networks:
      - nextcloud

  nextcloud_web:
    image: nginx
    container_name: nextcloud_web
    restart: always
    volumes:
      - "./apps/nextcloud/nginx.conf:/etc/nginx/nginx.conf:ro"
      - ${NEXTCLOUD_DATA_LOCATION}:/var/www/html:ro
    depends_on:
      - nextcloud_app
    networks:
      - proxy
      - nextcloud

  nextcloud_cron:
    image: nextcloud:fpm
    restart: always
    volumes:
      - ${NEXTCLOUD_DATA_LOCATION}:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud_db
      - nextcloud_redis
    networks:
      - nextcloud

networks:
  proxy:
  nextcloud: