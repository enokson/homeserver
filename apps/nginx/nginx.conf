#user http;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    types_hash_max_size 4096;
    server_names_hash_bucket_size  128;
    #gzip  on;

    # upstream localnode {
    #     server localnode;
    # }

    upstream pihole {
        server pihole:80;
    }

    upstream homer {
        server homer:8080;
    }

    upstream plex {
        server plex:32400;
    }

    upstream nextcloud_web {
        server nextcloud_web:80;
    }

    upstream photoprism {
        server photoprism:2342;
    }

    upstream wekan {
        server wekan:8080;
    }

    # http server
    server {
    
        listen 80;
        # the server name should reflect the host/ip used to access the proxy.
        server_name localnode localhost homeserver.local;
        return 301 https://$host$request_uri;
      
    }

    # http non-redirect server
    server {
    
        listen 8080;
        # the server name should reflect the host/ip used to access the proxy.
        # server_name localnode localhost homeserver.local;
        
        location /pihole/ {
            proxy_pass http://pihole/admin/;
        }

        location /homer/ {
            proxy_pass http://homer/;
        }

        location /plex/ {
            # set some headers and proxy stuff.
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;

            # include Host header
            proxy_set_header Host $host;
            proxy_pass http://0.0.0.0:8081/web;
        }

        location /nextcloud/ {
            return 301 https://$host:4434$request_uri;
        }

        location /photoprism/ {
            return 301 https://$host:4435$request_uri;
        }

        location /transcribe/ {
            root /;
            index index.html;
        }

        location / {
            return 301 /homer/;
        }

    }

    # https server
    server {
    
        listen 443 ssl;
        # the server name should reflect the host/ip used to access the proxy. In this example, just some ip on the local network
        # server_name 
        #     localnode 
        #     localhost 
        #     127.0.0.1
        #     homeserver.local;
        ssl_certificate      certs/selfsigned.crt;
        ssl_certificate_key  certs/selfsigned.key;

        # ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        # ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;
        # the redirect directive is not ok here. Must use proxy_pass directive
            
        location /pihole/ {
            proxy_pass http://pihole/admin/;
        }

        location /homer/ {
            proxy_pass http://homer/;
        }

        location /plex/ {
            # set some headers and proxy stuff.
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;

            # include Host header
            proxy_set_header Host $host;
            proxy_pass https://0.0.0.0:4433/web/;
        }

        location /nextcloud/ {
            return 301 https://$host:4434$request_uri;
        }

        location /photoprism/ {
            return 301 https://$host:4435$request_uri;
        }

        location /transcribe/ {
            root /;
            index index.html;
        }

        location /wekan/ {
            return 301 https://$host:4436$request_uri;
        }

        location / {
            return 301 /homer/;
        }

    }

    # plex http server
    server {
        listen 8081;
        location / {
            proxy_pass http://plex/;
        }
    }

    # plex https server
    server {
        listen 4433 ssl;
        ssl_certificate      certs/selfsigned.crt;
        ssl_certificate_key  certs/selfsigned.key;
        location / {
            proxy_pass http://plex/;
        }
    }

    # nextcloud http server
    server {
        listen 8082;
        location / {
            proxy_pass http://nextcloud_web/;
        }
    }

    # nextcloud https server
    server {
        listen 4434 ssl;
        ssl_certificate      certs/selfsigned.crt;
        ssl_certificate_key  certs/selfsigned.key;
        location / {
            proxy_pass http://nextcloud_web/;
        }
    }

    # photoprism http server
    server {
        listen 8083;
        location / {
            proxy_pass http://photoprism/;
        }
    }

    # photoprism https server
    server {
        listen 4435 ssl;
        ssl_certificate      certs/selfsigned.crt;
        ssl_certificate_key  certs/selfsigned.key;
        location / {
            proxy_pass http://photoprism/;
        }
    }

    # wekan http server
    server {
        listen 8084;
        location / {
            proxy_pass http://wekan/;
        }
    }

    # wekan https server
    server {
        listen 4436 ssl http2;
        ssl_certificate      certs/selfsigned.crt;
        ssl_certificate_key  certs/selfsigned.key;
        location / {
            proxy_pass http://wekan/;
        }
    }

    # This server redirects a hidden service to the desired service/port.
    # server {

	# listen 80;
	# the server name should reflect the host/ip used to access the proxy. In this example, an onion hostname
	# server_name fakeonionvixo3yczjdbmt4ebngssnx5ayr6hrmos27huuqfakeonion.onion;
	# location / {
		# proxy_pass http://127.0.0.1:8080/;
	# }

    # }

    # This server redirects a domain to the ssl version.
    # server {

	# listen 80;
	# the server name should reflect the host/ip used to access the proxy. In this example, the registered domain name
	# server_name my.domain.com;
	# location / {
		# proxy_pass http://127.0.0.1:8080/;
	# }

    # }
    
    # This server redirects a domain to a desired service/port.
    # server {

	# listen 443 ssl;
	# the server name should reflect the host/ip used to access the proxy. In this example, the registered domain name
	# server_name my.domain.com;
      
	# ssl_certificate      path/to/signed.crt;
	# ssl_certificate_key  path/to/signed.key;

	# ssl_session_cache    shared:SSL:1m;
	# ssl_session_timeout  5m;

	# ssl_ciphers  HIGH:!aNULL:!MD5;
	# ssl_prefer_server_ciphers  on;
	# location / {
		# proxy_pass http://127.0.0.1:8080/;
	# }

    # }

}